/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

bool isPalindrome(struct ListNode* head){
   struct ListNode* temp=head;
    if(!head|| !(head->next))
        return true;
    int count=1;
    while(temp->next){
        count++;
        temp=temp->next;
    }
    temp=head;
    int pos=1;
    if(count%2){    //odd
        while(pos<count/2){
            pos++;
            temp=temp->next;
        }
        temp->next=temp->next->next;
    }else{     
        while(pos<count/2){
            pos++;
            temp=temp->next;
        }
    }
    struct ListNode* nextHalfHead=temp->next;
    temp->next=NULL;
    struct ListNode* prev=NULL, *upcoming=nextHalfHead;
    while(upcoming){
        temp=upcoming->next;
        upcoming->next=prev;
        prev=upcoming;
        upcoming=temp;
    }
    nextHalfHead=prev;
    temp=head;
    struct ListNode *tempSecond=nextHalfHead;
    while(temp){
        if(temp->val!=tempSecond->val)
            return false;
        temp=temp->next;
        tempSecond=tempSecond->next;
    }
    return true;
}
